#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GDWebService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="gdshop")]
	public partial class GDDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertCTShipCar(CTShipCar instance);
    partial void UpdateCTShipCar(CTShipCar instance);
    partial void DeleteCTShipCar(CTShipCar instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDonDatHang(DonDatHang instance);
    partial void UpdateDonDatHang(DonDatHang instance);
    partial void DeleteDonDatHang(DonDatHang instance);
    partial void InsertHoaDonBan(HoaDonBan instance);
    partial void UpdateHoaDonBan(HoaDonBan instance);
    partial void DeleteHoaDonBan(HoaDonBan instance);
    partial void InsertHoaDonNhap(HoaDonNhap instance);
    partial void UpdateHoaDonNhap(HoaDonNhap instance);
    partial void DeleteHoaDonNhap(HoaDonNhap instance);
    partial void InsertKhoHang(KhoHang instance);
    partial void UpdateKhoHang(KhoHang instance);
    partial void DeleteKhoHang(KhoHang instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertQuality(Quality instance);
    partial void UpdateQuality(Quality instance);
    partial void DeleteQuality(Quality instance);
    partial void InsertTTHoaDon(TTHoaDon instance);
    partial void UpdateTTHoaDon(TTHoaDon instance);
    partial void DeleteTTHoaDon(TTHoaDon instance);
    partial void InsertCTDonDatHang(CTDonDatHang instance);
    partial void UpdateCTDonDatHang(CTDonDatHang instance);
    partial void DeleteCTDonDatHang(CTDonDatHang instance);
    partial void InsertShipCar(ShipCar instance);
    partial void UpdateShipCar(ShipCar instance);
    partial void DeleteShipCar(ShipCar instance);
    partial void InsertCTHoaDonNhap(CTHoaDonNhap instance);
    partial void UpdateCTHoaDonNhap(CTHoaDonNhap instance);
    partial void DeleteCTHoaDonNhap(CTHoaDonNhap instance);
    #endregion
		
		public GDDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["gdshopConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GDDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GDDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GDDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GDDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Brand> Brands
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<CTShipCar> CTShipCars
		{
			get
			{
				return this.GetTable<CTShipCar>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<DonDatHang> DonDatHangs
		{
			get
			{
				return this.GetTable<DonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonBan> HoaDonBans
		{
			get
			{
				return this.GetTable<HoaDonBan>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this.GetTable<HoaDonNhap>();
			}
		}
		
		public System.Data.Linq.Table<KhoHang> KhoHangs
		{
			get
			{
				return this.GetTable<KhoHang>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Quality> Qualities
		{
			get
			{
				return this.GetTable<Quality>();
			}
		}
		
		public System.Data.Linq.Table<TTHoaDon> TTHoaDons
		{
			get
			{
				return this.GetTable<TTHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<CTDonDatHang> CTDonDatHangs
		{
			get
			{
				return this.GetTable<CTDonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<ShipCar> ShipCars
		{
			get
			{
				return this.GetTable<ShipCar>();
			}
		}
		
		public System.Data.Linq.Table<CTHoaDonNhap> CTHoaDonNhaps
		{
			get
			{
				return this.GetTable<CTHoaDonNhap>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brand")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ten;
		
		private string _diachi;
		
		private string _sdt;
		
		private string _image;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenChanging(string value);
    partial void OntenChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public Brand()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten", DbType="NVarChar(50)")]
		public string ten
		{
			get
			{
				return this._ten;
			}
			set
			{
				if ((this._ten != value))
				{
					this.OntenChanging(value);
					this.SendPropertyChanging();
					this._ten = value;
					this.SendPropertyChanged("ten");
					this.OntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(MAX)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="VarChar(50)")]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(50)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Product", Storage="_Products", ThisKey="id", OtherKey="idbrand")]
		internal EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type")]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenloai;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenloaiChanging(string value);
    partial void OntenloaiChanged();
    #endregion
		
		public Type()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenloai", DbType="NVarChar(50)")]
		public string tenloai
		{
			get
			{
				return this._tenloai;
			}
			set
			{
				if ((this._tenloai != value))
				{
					this.OntenloaiChanging(value);
					this.SendPropertyChanging();
					this._tenloai = value;
					this.SendPropertyChanged("tenloai");
					this.OntenloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Product", Storage="_Products", ThisKey="id", OtherKey="idloai")]
		internal EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenchucvu;
		
		private System.Nullable<int> _luong;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenchucvuChanging(string value);
    partial void OntenchucvuChanged();
    partial void OnluongChanging(System.Nullable<int> value);
    partial void OnluongChanged();
    #endregion
		
		public ChucVu()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenchucvu", DbType="NVarChar(100)")]
		public string tenchucvu
		{
			get
			{
				return this._tenchucvu;
			}
			set
			{
				if ((this._tenchucvu != value))
				{
					this.OntenchucvuChanging(value);
					this.SendPropertyChanging();
					this._tenchucvu = value;
					this.SendPropertyChanged("tenchucvu");
					this.OntenchucvuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luong", DbType="Int")]
		public System.Nullable<int> luong
		{
			get
			{
				return this._luong;
			}
			set
			{
				if ((this._luong != value))
				{
					this.OnluongChanging(value);
					this.SendPropertyChanging();
					this._luong = value;
					this.SendPropertyChanged("luong");
					this.OnluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_NhanViens", ThisKey="id", OtherKey="idchucvu")]
		internal EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idsanpham;
		
		private int _iduser;
		
		private string _comment1;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidsanphamChanging(int value);
    partial void OnidsanphamChanged();
    partial void OniduserChanging(int value);
    partial void OniduserChanged();
    partial void Oncomment1Changing(string value);
    partial void Oncomment1Changed();
    #endregion
		
		public Comment()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsanpham", DbType="Int NOT NULL")]
		public int idsanpham
		{
			get
			{
				return this._idsanpham;
			}
			set
			{
				if ((this._idsanpham != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidsanphamChanging(value);
					this.SendPropertyChanging();
					this._idsanpham = value;
					this.SendPropertyChanged("idsanpham");
					this.OnidsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iduser", DbType="Int NOT NULL")]
		public int iduser
		{
			get
			{
				return this._iduser;
			}
			set
			{
				if ((this._iduser != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniduserChanging(value);
					this.SendPropertyChanging();
					this._iduser = value;
					this.SendPropertyChanged("iduser");
					this.OniduserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="comment", Storage="_comment1", DbType="NVarChar(MAX)")]
		public string comment1
		{
			get
			{
				return this._comment1;
			}
			set
			{
				if ((this._comment1 != value))
				{
					this.Oncomment1Changing(value);
					this.SendPropertyChanging();
					this._comment1 = value;
					this.SendPropertyChanged("comment1");
					this.Oncomment1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Comment", Storage="_Customer", ThisKey="iduser", OtherKey="id", IsForeignKey=true)]
		internal Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._iduser = value.id;
					}
					else
					{
						this._iduser = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Comment", Storage="_Product", ThisKey="idsanpham", OtherKey="id", IsForeignKey=true)]
		internal Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._idsanpham = value.id;
					}
					else
					{
						this._idsanpham = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTShipCar")]
	public partial class CTShipCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idshipcar;
		
		private System.Nullable<int> _idhd;
		
		private EntityRef<HoaDonBan> _HoaDonBan;
		
		private EntityRef<ShipCar> _ShipCar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidshipcarChanging(System.Nullable<int> value);
    partial void OnidshipcarChanged();
    partial void OnidhdChanging(System.Nullable<int> value);
    partial void OnidhdChanged();
    #endregion
		
		public CTShipCar()
		{
			this._HoaDonBan = default(EntityRef<HoaDonBan>);
			this._ShipCar = default(EntityRef<ShipCar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idshipcar", DbType="Int")]
		public System.Nullable<int> idshipcar
		{
			get
			{
				return this._idshipcar;
			}
			set
			{
				if ((this._idshipcar != value))
				{
					if (this._ShipCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidshipcarChanging(value);
					this.SendPropertyChanging();
					this._idshipcar = value;
					this.SendPropertyChanged("idshipcar");
					this.OnidshipcarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idhd", DbType="Int")]
		public System.Nullable<int> idhd
		{
			get
			{
				return this._idhd;
			}
			set
			{
				if ((this._idhd != value))
				{
					if (this._HoaDonBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidhdChanging(value);
					this.SendPropertyChanging();
					this._idhd = value;
					this.SendPropertyChanged("idhd");
					this.OnidhdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBan_CTShipCar", Storage="_HoaDonBan", ThisKey="idhd", OtherKey="id", IsForeignKey=true)]
		internal HoaDonBan HoaDonBan
		{
			get
			{
				return this._HoaDonBan.Entity;
			}
			set
			{
				HoaDonBan previousValue = this._HoaDonBan.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonBan.Entity = null;
						previousValue.CTShipCars.Remove(this);
					}
					this._HoaDonBan.Entity = value;
					if ((value != null))
					{
						value.CTShipCars.Add(this);
						this._idhd = value.id;
					}
					else
					{
						this._idhd = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoaDonBan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShipCar_CTShipCar", Storage="_ShipCar", ThisKey="idshipcar", OtherKey="id", IsForeignKey=true)]
		internal ShipCar ShipCar
		{
			get
			{
				return this._ShipCar.Entity;
			}
			set
			{
				ShipCar previousValue = this._ShipCar.Entity;
				if (((previousValue != value) 
							|| (this._ShipCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShipCar.Entity = null;
						previousValue.CTShipCars.Remove(this);
					}
					this._ShipCar.Entity = value;
					if ((value != null))
					{
						value.CTShipCars.Add(this);
						this._idshipcar = value.id;
					}
					else
					{
						this._idshipcar = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShipCar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenkh;
		
		private string _diachikh;
		
		private string _dienthoai;
		
		private string _email;
		
		private string _taikhoan;
		
		private string _matkhau;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<DonDatHang> _DonDatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenkhChanging(string value);
    partial void OntenkhChanged();
    partial void OndiachikhChanging(string value);
    partial void OndiachikhChanged();
    partial void OndienthoaiChanging(string value);
    partial void OndienthoaiChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntaikhoanChanging(string value);
    partial void OntaikhoanChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    #endregion
		
		public Customer()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._DonDatHangs = new EntitySet<DonDatHang>(new Action<DonDatHang>(this.attach_DonDatHangs), new Action<DonDatHang>(this.detach_DonDatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenkh", DbType="NVarChar(100)")]
		public string tenkh
		{
			get
			{
				return this._tenkh;
			}
			set
			{
				if ((this._tenkh != value))
				{
					this.OntenkhChanging(value);
					this.SendPropertyChanging();
					this._tenkh = value;
					this.SendPropertyChanged("tenkh");
					this.OntenkhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachikh", DbType="NVarChar(100)")]
		public string diachikh
		{
			get
			{
				return this._diachikh;
			}
			set
			{
				if ((this._diachikh != value))
				{
					this.OndiachikhChanging(value);
					this.SendPropertyChanging();
					this._diachikh = value;
					this.SendPropertyChanged("diachikh");
					this.OndiachikhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dienthoai", DbType="VarChar(50)")]
		public string dienthoai
		{
			get
			{
				return this._dienthoai;
			}
			set
			{
				if ((this._dienthoai != value))
				{
					this.OndienthoaiChanging(value);
					this.SendPropertyChanging();
					this._dienthoai = value;
					this.SendPropertyChanged("dienthoai");
					this.OndienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taikhoan", DbType="VarChar(50)")]
		public string taikhoan
		{
			get
			{
				return this._taikhoan;
			}
			set
			{
				if ((this._taikhoan != value))
				{
					this.OntaikhoanChanging(value);
					this.SendPropertyChanging();
					this._taikhoan = value;
					this.SendPropertyChanged("taikhoan");
					this.OntaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="VarChar(50)")]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Comment", Storage="_Comments", ThisKey="id", OtherKey="iduser")]
		internal EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DonDatHang", Storage="_DonDatHangs", ThisKey="id", OtherKey="idkhachhang")]
		internal EntitySet<DonDatHang> DonDatHangs
		{
			get
			{
				return this._DonDatHangs;
			}
			set
			{
				this._DonDatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatHang")]
	public partial class DonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _ngaydathang;
		
		private int _idkhachhang;
		
		private int _tongtien;
		
		private System.Nullable<int> _tinhtrang;
		
		private EntitySet<HoaDonBan> _HoaDonBans;
		
		private EntitySet<CTDonDatHang> _CTDonDatHangs;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnngaydathangChanging(System.Nullable<System.DateTime> value);
    partial void OnngaydathangChanged();
    partial void OnidkhachhangChanging(int value);
    partial void OnidkhachhangChanged();
    partial void OntongtienChanging(int value);
    partial void OntongtienChanged();
    partial void OntinhtrangChanging(System.Nullable<int> value);
    partial void OntinhtrangChanged();
    #endregion
		
		public DonDatHang()
		{
			this._HoaDonBans = new EntitySet<HoaDonBan>(new Action<HoaDonBan>(this.attach_HoaDonBans), new Action<HoaDonBan>(this.detach_HoaDonBans));
			this._CTDonDatHangs = new EntitySet<CTDonDatHang>(new Action<CTDonDatHang>(this.attach_CTDonDatHangs), new Action<CTDonDatHang>(this.detach_CTDonDatHangs));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaydathang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaydathang
		{
			get
			{
				return this._ngaydathang;
			}
			set
			{
				if ((this._ngaydathang != value))
				{
					this.OnngaydathangChanging(value);
					this.SendPropertyChanging();
					this._ngaydathang = value;
					this.SendPropertyChanged("ngaydathang");
					this.OnngaydathangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idkhachhang", DbType="Int NOT NULL")]
		public int idkhachhang
		{
			get
			{
				return this._idkhachhang;
			}
			set
			{
				if ((this._idkhachhang != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidkhachhangChanging(value);
					this.SendPropertyChanging();
					this._idkhachhang = value;
					this.SendPropertyChanged("idkhachhang");
					this.OnidkhachhangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongtien", DbType="Int NOT NULL")]
		public int tongtien
		{
			get
			{
				return this._tongtien;
			}
			set
			{
				if ((this._tongtien != value))
				{
					this.OntongtienChanging(value);
					this.SendPropertyChanging();
					this._tongtien = value;
					this.SendPropertyChanged("tongtien");
					this.OntongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tinhtrang", DbType="Int")]
		public System.Nullable<int> tinhtrang
		{
			get
			{
				return this._tinhtrang;
			}
			set
			{
				if ((this._tinhtrang != value))
				{
					this.OntinhtrangChanging(value);
					this.SendPropertyChanging();
					this._tinhtrang = value;
					this.SendPropertyChanged("tinhtrang");
					this.OntinhtrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_HoaDonBan", Storage="_HoaDonBans", ThisKey="id", OtherKey="iddondathang")]
		internal EntitySet<HoaDonBan> HoaDonBans
		{
			get
			{
				return this._HoaDonBans;
			}
			set
			{
				this._HoaDonBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDonDatHang", Storage="_CTDonDatHangs", ThisKey="id", OtherKey="iddonhang")]
		internal EntitySet<CTDonDatHang> CTDonDatHangs
		{
			get
			{
				return this._CTDonDatHangs;
			}
			set
			{
				this._CTDonDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DonDatHang", Storage="_Customer", ThisKey="idkhachhang", OtherKey="id", IsForeignKey=true)]
		internal Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.DonDatHangs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.DonDatHangs.Add(this);
						this._idkhachhang = value.id;
					}
					else
					{
						this._idkhachhang = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = this;
		}
		
		private void detach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = null;
		}
		
		private void attach_CTDonDatHangs(CTDonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = this;
		}
		
		private void detach_CTDonDatHangs(CTDonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonBan")]
	public partial class HoaDonBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idnhanvien;
		
		private int _iddondathang;
		
		private System.DateTime _ngayxuat;
		
		private System.Nullable<int> _idtthoadon;
		
		private EntitySet<CTShipCar> _CTShipCars;
		
		private EntityRef<DonDatHang> _DonDatHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<TTHoaDon> _TTHoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidnhanvienChanging(int value);
    partial void OnidnhanvienChanged();
    partial void OniddondathangChanging(int value);
    partial void OniddondathangChanged();
    partial void OnngayxuatChanging(System.DateTime value);
    partial void OnngayxuatChanged();
    partial void OnidtthoadonChanging(System.Nullable<int> value);
    partial void OnidtthoadonChanged();
    #endregion
		
		public HoaDonBan()
		{
			this._CTShipCars = new EntitySet<CTShipCar>(new Action<CTShipCar>(this.attach_CTShipCars), new Action<CTShipCar>(this.detach_CTShipCars));
			this._DonDatHang = default(EntityRef<DonDatHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			this._TTHoaDon = default(EntityRef<TTHoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhanvien", DbType="Int NOT NULL")]
		public int idnhanvien
		{
			get
			{
				return this._idnhanvien;
			}
			set
			{
				if ((this._idnhanvien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidnhanvienChanging(value);
					this.SendPropertyChanging();
					this._idnhanvien = value;
					this.SendPropertyChanged("idnhanvien");
					this.OnidnhanvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iddondathang", DbType="Int NOT NULL")]
		public int iddondathang
		{
			get
			{
				return this._iddondathang;
			}
			set
			{
				if ((this._iddondathang != value))
				{
					if (this._DonDatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniddondathangChanging(value);
					this.SendPropertyChanging();
					this._iddondathang = value;
					this.SendPropertyChanged("iddondathang");
					this.OniddondathangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayxuat", DbType="DateTime NOT NULL")]
		public System.DateTime ngayxuat
		{
			get
			{
				return this._ngayxuat;
			}
			set
			{
				if ((this._ngayxuat != value))
				{
					this.OnngayxuatChanging(value);
					this.SendPropertyChanging();
					this._ngayxuat = value;
					this.SendPropertyChanged("ngayxuat");
					this.OnngayxuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idtthoadon", DbType="Int")]
		public System.Nullable<int> idtthoadon
		{
			get
			{
				return this._idtthoadon;
			}
			set
			{
				if ((this._idtthoadon != value))
				{
					if (this._TTHoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidtthoadonChanging(value);
					this.SendPropertyChanging();
					this._idtthoadon = value;
					this.SendPropertyChanged("idtthoadon");
					this.OnidtthoadonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBan_CTShipCar", Storage="_CTShipCars", ThisKey="id", OtherKey="idhd")]
		internal EntitySet<CTShipCar> CTShipCars
		{
			get
			{
				return this._CTShipCars;
			}
			set
			{
				this._CTShipCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_HoaDonBan", Storage="_DonDatHang", ThisKey="iddondathang", OtherKey="id", IsForeignKey=true)]
		internal DonDatHang DonDatHang
		{
			get
			{
				return this._DonDatHang.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang.Entity = null;
						previousValue.HoaDonBans.Remove(this);
					}
					this._DonDatHang.Entity = value;
					if ((value != null))
					{
						value.HoaDonBans.Add(this);
						this._iddondathang = value.id;
					}
					else
					{
						this._iddondathang = default(int);
					}
					this.SendPropertyChanged("DonDatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonBan", Storage="_NhanVien", ThisKey="idnhanvien", OtherKey="id", IsForeignKey=true)]
		internal NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonBans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonBans.Add(this);
						this._idnhanvien = value.id;
					}
					else
					{
						this._idnhanvien = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TTHoaDon_HoaDonBan", Storage="_TTHoaDon", ThisKey="idtthoadon", OtherKey="id", IsForeignKey=true)]
		internal TTHoaDon TTHoaDon
		{
			get
			{
				return this._TTHoaDon.Entity;
			}
			set
			{
				TTHoaDon previousValue = this._TTHoaDon.Entity;
				if (((previousValue != value) 
							|| (this._TTHoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TTHoaDon.Entity = null;
						previousValue.HoaDonBans.Remove(this);
					}
					this._TTHoaDon.Entity = value;
					if ((value != null))
					{
						value.HoaDonBans.Add(this);
						this._idtthoadon = value.id;
					}
					else
					{
						this._idtthoadon = default(Nullable<int>);
					}
					this.SendPropertyChanged("TTHoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTShipCars(CTShipCar entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBan = this;
		}
		
		private void detach_CTShipCars(CTShipCar entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonNhap")]
	public partial class HoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idnhacungcap;
		
		private System.DateTime _ngaynhap;
		
		private int _idnhanvien;
		
		private int _tongtien;
		
		private EntitySet<CTHoaDonNhap> _CTHoaDonNhaps;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidnhacungcapChanging(int value);
    partial void OnidnhacungcapChanged();
    partial void OnngaynhapChanging(System.DateTime value);
    partial void OnngaynhapChanged();
    partial void OnidnhanvienChanging(int value);
    partial void OnidnhanvienChanged();
    partial void OntongtienChanging(int value);
    partial void OntongtienChanged();
    #endregion
		
		public HoaDonNhap()
		{
			this._CTHoaDonNhaps = new EntitySet<CTHoaDonNhap>(new Action<CTHoaDonNhap>(this.attach_CTHoaDonNhaps), new Action<CTHoaDonNhap>(this.detach_CTHoaDonNhaps));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhacungcap", DbType="Int NOT NULL")]
		public int idnhacungcap
		{
			get
			{
				return this._idnhacungcap;
			}
			set
			{
				if ((this._idnhacungcap != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidnhacungcapChanging(value);
					this.SendPropertyChanging();
					this._idnhacungcap = value;
					this.SendPropertyChanged("idnhacungcap");
					this.OnidnhacungcapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaynhap", DbType="DateTime NOT NULL")]
		public System.DateTime ngaynhap
		{
			get
			{
				return this._ngaynhap;
			}
			set
			{
				if ((this._ngaynhap != value))
				{
					this.OnngaynhapChanging(value);
					this.SendPropertyChanging();
					this._ngaynhap = value;
					this.SendPropertyChanged("ngaynhap");
					this.OnngaynhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhanvien", DbType="Int NOT NULL")]
		public int idnhanvien
		{
			get
			{
				return this._idnhanvien;
			}
			set
			{
				if ((this._idnhanvien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidnhanvienChanging(value);
					this.SendPropertyChanging();
					this._idnhanvien = value;
					this.SendPropertyChanged("idnhanvien");
					this.OnidnhanvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongtien", DbType="Int NOT NULL")]
		public int tongtien
		{
			get
			{
				return this._tongtien;
			}
			set
			{
				if ((this._tongtien != value))
				{
					this.OntongtienChanging(value);
					this.SendPropertyChanging();
					this._tongtien = value;
					this.SendPropertyChanged("tongtien");
					this.OntongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_CTHoaDonNhap", Storage="_CTHoaDonNhaps", ThisKey="id", OtherKey="idhoadonnhap")]
		internal EntitySet<CTHoaDonNhap> CTHoaDonNhaps
		{
			get
			{
				return this._CTHoaDonNhaps;
			}
			set
			{
				this._CTHoaDonNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HoaDonNhap", Storage="_NhaCungCap", ThisKey="idnhacungcap", OtherKey="id", IsForeignKey=true)]
		internal NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.HoaDonNhaps.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhaps.Add(this);
						this._idnhacungcap = value.id;
					}
					else
					{
						this._idnhacungcap = default(int);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhap", Storage="_NhanVien", ThisKey="idnhanvien", OtherKey="id", IsForeignKey=true)]
		internal NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDonNhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDonNhaps.Add(this);
						this._idnhanvien = value.id;
					}
					else
					{
						this._idnhanvien = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDonNhaps(CTHoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = this;
		}
		
		private void detach_CTHoaDonNhaps(CTHoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoHang")]
	public partial class KhoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idsanpham;
		
		private int _soluong;
		
		private string _size;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidsanphamChanging(int value);
    partial void OnidsanphamChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    #endregion
		
		public KhoHang()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsanpham", DbType="Int NOT NULL")]
		public int idsanpham
		{
			get
			{
				return this._idsanpham;
			}
			set
			{
				if ((this._idsanpham != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidsanphamChanging(value);
					this.SendPropertyChanging();
					this._idsanpham = value;
					this.SendPropertyChanged("idsanpham");
					this.OnidsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_KhoHang", Storage="_Product", ThisKey="idsanpham", OtherKey="id", IsForeignKey=true)]
		internal Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.KhoHangs.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.KhoHangs.Add(this);
						this._idsanpham = value.id;
					}
					else
					{
						this._idsanpham = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ten;
		
		private string _diachi;
		
		private string _sdt;
		
		private string _email;
		
		private EntitySet<HoaDonNhap> _HoaDonNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenChanging(string value);
    partial void OntenChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._HoaDonNhaps = new EntitySet<HoaDonNhap>(new Action<HoaDonNhap>(this.attach_HoaDonNhaps), new Action<HoaDonNhap>(this.detach_HoaDonNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ten
		{
			get
			{
				return this._ten;
			}
			set
			{
				if ((this._ten != value))
				{
					this.OntenChanging(value);
					this.SendPropertyChanging();
					this._ten = value;
					this.SendPropertyChanged("ten");
					this.OntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(100)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="VarChar(50)")]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_HoaDonNhap", Storage="_HoaDonNhaps", ThisKey="id", OtherKey="idnhacungcap")]
		internal EntitySet<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this._HoaDonNhaps;
			}
			set
			{
				this._HoaDonNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tennv;
		
		private string _diachi;
		
		private string _sdt;
		
		private System.Nullable<int> _idchucvu;
		
		private string _taikhoan;
		
		private string _matkhau;
		
		private EntitySet<HoaDonBan> _HoaDonBans;
		
		private EntitySet<HoaDonNhap> _HoaDonNhaps;
		
		private EntitySet<ShipCar> _ShipCars;
		
		private EntityRef<ChucVu> _ChucVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntennvChanging(string value);
    partial void OntennvChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OnidchucvuChanging(System.Nullable<int> value);
    partial void OnidchucvuChanged();
    partial void OntaikhoanChanging(string value);
    partial void OntaikhoanChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    #endregion
		
		public NhanVien()
		{
			this._HoaDonBans = new EntitySet<HoaDonBan>(new Action<HoaDonBan>(this.attach_HoaDonBans), new Action<HoaDonBan>(this.detach_HoaDonBans));
			this._HoaDonNhaps = new EntitySet<HoaDonNhap>(new Action<HoaDonNhap>(this.attach_HoaDonNhaps), new Action<HoaDonNhap>(this.detach_HoaDonNhaps));
			this._ShipCars = new EntitySet<ShipCar>(new Action<ShipCar>(this.attach_ShipCars), new Action<ShipCar>(this.detach_ShipCars));
			this._ChucVu = default(EntityRef<ChucVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tennv", DbType="NVarChar(100)")]
		public string tennv
		{
			get
			{
				return this._tennv;
			}
			set
			{
				if ((this._tennv != value))
				{
					this.OntennvChanging(value);
					this.SendPropertyChanging();
					this._tennv = value;
					this.SendPropertyChanged("tennv");
					this.OntennvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(100)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="VarChar(50)")]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idchucvu", DbType="Int")]
		public System.Nullable<int> idchucvu
		{
			get
			{
				return this._idchucvu;
			}
			set
			{
				if ((this._idchucvu != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidchucvuChanging(value);
					this.SendPropertyChanging();
					this._idchucvu = value;
					this.SendPropertyChanged("idchucvu");
					this.OnidchucvuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taikhoan", DbType="VarChar(50)")]
		public string taikhoan
		{
			get
			{
				return this._taikhoan;
			}
			set
			{
				if ((this._taikhoan != value))
				{
					this.OntaikhoanChanging(value);
					this.SendPropertyChanging();
					this._taikhoan = value;
					this.SendPropertyChanged("taikhoan");
					this.OntaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="VarChar(50)")]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonBan", Storage="_HoaDonBans", ThisKey="id", OtherKey="idnhanvien")]
		internal EntitySet<HoaDonBan> HoaDonBans
		{
			get
			{
				return this._HoaDonBans;
			}
			set
			{
				this._HoaDonBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDonNhap", Storage="_HoaDonNhaps", ThisKey="id", OtherKey="idnhanvien")]
		internal EntitySet<HoaDonNhap> HoaDonNhaps
		{
			get
			{
				return this._HoaDonNhaps;
			}
			set
			{
				this._HoaDonNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ShipCar", Storage="_ShipCars", ThisKey="id", OtherKey="idnhanvien")]
		internal EntitySet<ShipCar> ShipCars
		{
			get
			{
				return this._ShipCars;
			}
			set
			{
				this._ShipCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_NhanVien", Storage="_ChucVu", ThisKey="idchucvu", OtherKey="id", IsForeignKey=true)]
		internal ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._idchucvu = value.id;
					}
					else
					{
						this._idchucvu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDonNhaps(HoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_ShipCars(ShipCar entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_ShipCars(ShipCar entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tensp;
		
		private int _dongia;
		
		private string _image1;
		
		private string _image2;
		
		private string _image3;
		
		private System.Nullable<int> _idloai;
		
		private System.Nullable<int> _idchatlieu;
		
		private string _trangthai;
		
		private System.Nullable<int> _idbrand;
		
		private System.Nullable<int> _taydai;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<KhoHang> _KhoHangs;
		
		private EntitySet<CTDonDatHang> _CTDonDatHangs;
		
		private EntitySet<CTHoaDonNhap> _CTHoaDonNhaps;
		
		private EntityRef<Brand> _Brand;
		
		private EntityRef<Type> _Type;
		
		private EntityRef<Quality> _Quality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenspChanging(string value);
    partial void OntenspChanged();
    partial void OndongiaChanging(int value);
    partial void OndongiaChanged();
    partial void Onimage1Changing(string value);
    partial void Onimage1Changed();
    partial void Onimage2Changing(string value);
    partial void Onimage2Changed();
    partial void Onimage3Changing(string value);
    partial void Onimage3Changed();
    partial void OnidloaiChanging(System.Nullable<int> value);
    partial void OnidloaiChanged();
    partial void OnidchatlieuChanging(System.Nullable<int> value);
    partial void OnidchatlieuChanged();
    partial void OntrangthaiChanging(string value);
    partial void OntrangthaiChanged();
    partial void OnidbrandChanging(System.Nullable<int> value);
    partial void OnidbrandChanged();
    partial void OntaydaiChanging(System.Nullable<int> value);
    partial void OntaydaiChanged();
    #endregion
		
		public Product()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._KhoHangs = new EntitySet<KhoHang>(new Action<KhoHang>(this.attach_KhoHangs), new Action<KhoHang>(this.detach_KhoHangs));
			this._CTDonDatHangs = new EntitySet<CTDonDatHang>(new Action<CTDonDatHang>(this.attach_CTDonDatHangs), new Action<CTDonDatHang>(this.detach_CTDonDatHangs));
			this._CTHoaDonNhaps = new EntitySet<CTHoaDonNhap>(new Action<CTHoaDonNhap>(this.attach_CTHoaDonNhaps), new Action<CTHoaDonNhap>(this.detach_CTHoaDonNhaps));
			this._Brand = default(EntityRef<Brand>);
			this._Type = default(EntityRef<Type>);
			this._Quality = default(EntityRef<Quality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tensp", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tensp
		{
			get
			{
				return this._tensp;
			}
			set
			{
				if ((this._tensp != value))
				{
					this.OntenspChanging(value);
					this.SendPropertyChanging();
					this._tensp = value;
					this.SendPropertyChanged("tensp");
					this.OntenspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Int NOT NULL")]
		public int dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image1", DbType="VarChar(50)")]
		public string image1
		{
			get
			{
				return this._image1;
			}
			set
			{
				if ((this._image1 != value))
				{
					this.Onimage1Changing(value);
					this.SendPropertyChanging();
					this._image1 = value;
					this.SendPropertyChanged("image1");
					this.Onimage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image2", DbType="VarChar(50)")]
		public string image2
		{
			get
			{
				return this._image2;
			}
			set
			{
				if ((this._image2 != value))
				{
					this.Onimage2Changing(value);
					this.SendPropertyChanging();
					this._image2 = value;
					this.SendPropertyChanged("image2");
					this.Onimage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image3", DbType="VarChar(50)")]
		public string image3
		{
			get
			{
				return this._image3;
			}
			set
			{
				if ((this._image3 != value))
				{
					this.Onimage3Changing(value);
					this.SendPropertyChanging();
					this._image3 = value;
					this.SendPropertyChanged("image3");
					this.Onimage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idloai", DbType="Int")]
		public System.Nullable<int> idloai
		{
			get
			{
				return this._idloai;
			}
			set
			{
				if ((this._idloai != value))
				{
					if (this._Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidloaiChanging(value);
					this.SendPropertyChanging();
					this._idloai = value;
					this.SendPropertyChanged("idloai");
					this.OnidloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idchatlieu", DbType="Int")]
		public System.Nullable<int> idchatlieu
		{
			get
			{
				return this._idchatlieu;
			}
			set
			{
				if ((this._idchatlieu != value))
				{
					if (this._Quality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidchatlieuChanging(value);
					this.SendPropertyChanging();
					this._idchatlieu = value;
					this.SendPropertyChanged("idchatlieu");
					this.OnidchatlieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="NVarChar(50)")]
		public string trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idbrand", DbType="Int")]
		public System.Nullable<int> idbrand
		{
			get
			{
				return this._idbrand;
			}
			set
			{
				if ((this._idbrand != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidbrandChanging(value);
					this.SendPropertyChanging();
					this._idbrand = value;
					this.SendPropertyChanged("idbrand");
					this.OnidbrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taydai", DbType="Int")]
		public System.Nullable<int> taydai
		{
			get
			{
				return this._taydai;
			}
			set
			{
				if ((this._taydai != value))
				{
					this.OntaydaiChanging(value);
					this.SendPropertyChanging();
					this._taydai = value;
					this.SendPropertyChanged("taydai");
					this.OntaydaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Comment", Storage="_Comments", ThisKey="id", OtherKey="idsanpham")]
		internal EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_KhoHang", Storage="_KhoHangs", ThisKey="id", OtherKey="idsanpham")]
		internal EntitySet<KhoHang> KhoHangs
		{
			get
			{
				return this._KhoHangs;
			}
			set
			{
				this._KhoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CTDonDatHang", Storage="_CTDonDatHangs", ThisKey="id", OtherKey="idsanpham")]
		internal EntitySet<CTDonDatHang> CTDonDatHangs
		{
			get
			{
				return this._CTDonDatHangs;
			}
			set
			{
				this._CTDonDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CTHoaDonNhap", Storage="_CTHoaDonNhaps", ThisKey="id", OtherKey="idsanpham")]
		internal EntitySet<CTHoaDonNhap> CTHoaDonNhaps
		{
			get
			{
				return this._CTHoaDonNhaps;
			}
			set
			{
				this._CTHoaDonNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Product", Storage="_Brand", ThisKey="idbrand", OtherKey="id", IsForeignKey=true)]
		internal Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._idbrand = value.id;
					}
					else
					{
						this._idbrand = default(Nullable<int>);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Product", Storage="_Type", ThisKey="idloai", OtherKey="id", IsForeignKey=true)]
		internal Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._idloai = value.id;
					}
					else
					{
						this._idloai = default(Nullable<int>);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quality_Product", Storage="_Quality", ThisKey="idchatlieu", OtherKey="id", IsForeignKey=true)]
		internal Quality Quality
		{
			get
			{
				return this._Quality.Entity;
			}
			set
			{
				Quality previousValue = this._Quality.Entity;
				if (((previousValue != value) 
							|| (this._Quality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quality.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Quality.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._idchatlieu = value.id;
					}
					else
					{
						this._idchatlieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Quality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_CTDonDatHangs(CTDonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_CTDonDatHangs(CTDonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_CTHoaDonNhaps(CTHoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_CTHoaDonNhaps(CTHoaDonNhap entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quality")]
	public partial class Quality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenchatlieu;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenchatlieuChanging(string value);
    partial void OntenchatlieuChanged();
    #endregion
		
		public Quality()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenchatlieu", DbType="NVarChar(50)")]
		public string tenchatlieu
		{
			get
			{
				return this._tenchatlieu;
			}
			set
			{
				if ((this._tenchatlieu != value))
				{
					this.OntenchatlieuChanging(value);
					this.SendPropertyChanging();
					this._tenchatlieu = value;
					this.SendPropertyChanged("tenchatlieu");
					this.OntenchatlieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quality_Product", Storage="_Products", ThisKey="id", OtherKey="idchatlieu")]
		internal EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Quality = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Quality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TTHoaDon")]
	public partial class TTHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tentt;
		
		private EntitySet<HoaDonBan> _HoaDonBans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenttChanging(string value);
    partial void OntenttChanged();
    #endregion
		
		public TTHoaDon()
		{
			this._HoaDonBans = new EntitySet<HoaDonBan>(new Action<HoaDonBan>(this.attach_HoaDonBans), new Action<HoaDonBan>(this.detach_HoaDonBans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tentt", DbType="NVarChar(50)")]
		public string tentt
		{
			get
			{
				return this._tentt;
			}
			set
			{
				if ((this._tentt != value))
				{
					this.OntenttChanging(value);
					this.SendPropertyChanging();
					this._tentt = value;
					this.SendPropertyChanged("tentt");
					this.OntenttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TTHoaDon_HoaDonBan", Storage="_HoaDonBans", ThisKey="id", OtherKey="idtthoadon")]
		internal EntitySet<HoaDonBan> HoaDonBans
		{
			get
			{
				return this._HoaDonBans;
			}
			set
			{
				this._HoaDonBans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.TTHoaDon = this;
		}
		
		private void detach_HoaDonBans(HoaDonBan entity)
		{
			this.SendPropertyChanging();
			entity.TTHoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDonDatHang")]
	public partial class CTDonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _iddonhang;
		
		private int _idsanpham;
		
		private int _soluong;
		
		private string _size;
		
		private EntityRef<DonDatHang> _DonDatHang;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OniddonhangChanging(int value);
    partial void OniddonhangChanged();
    partial void OnidsanphamChanging(int value);
    partial void OnidsanphamChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    #endregion
		
		public CTDonDatHang()
		{
			this._DonDatHang = default(EntityRef<DonDatHang>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iddonhang", DbType="Int NOT NULL")]
		public int iddonhang
		{
			get
			{
				return this._iddonhang;
			}
			set
			{
				if ((this._iddonhang != value))
				{
					if (this._DonDatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniddonhangChanging(value);
					this.SendPropertyChanging();
					this._iddonhang = value;
					this.SendPropertyChanged("iddonhang");
					this.OniddonhangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsanpham", DbType="Int NOT NULL")]
		public int idsanpham
		{
			get
			{
				return this._idsanpham;
			}
			set
			{
				if ((this._idsanpham != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidsanphamChanging(value);
					this.SendPropertyChanging();
					this._idsanpham = value;
					this.SendPropertyChanged("idsanpham");
					this.OnidsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(3)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDonDatHang", Storage="_DonDatHang", ThisKey="iddonhang", OtherKey="id", IsForeignKey=true)]
		internal DonDatHang DonDatHang
		{
			get
			{
				return this._DonDatHang.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang.Entity = null;
						previousValue.CTDonDatHangs.Remove(this);
					}
					this._DonDatHang.Entity = value;
					if ((value != null))
					{
						value.CTDonDatHangs.Add(this);
						this._iddonhang = value.id;
					}
					else
					{
						this._iddonhang = default(int);
					}
					this.SendPropertyChanged("DonDatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CTDonDatHang", Storage="_Product", ThisKey="idsanpham", OtherKey="id", IsForeignKey=true)]
		internal Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.CTDonDatHangs.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.CTDonDatHangs.Add(this);
						this._idsanpham = value.id;
					}
					else
					{
						this._idsanpham = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShipCar")]
	public partial class ShipCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _biensoxe;
		
		private System.Nullable<int> _idnhanvien;
		
		private System.Nullable<double> _latitude;
		
		private System.Nullable<double> _longitude;
		
		private string _location;
		
		private EntitySet<CTShipCar> _CTShipCars;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbiensoxeChanging(System.Nullable<int> value);
    partial void OnbiensoxeChanged();
    partial void OnidnhanvienChanging(System.Nullable<int> value);
    partial void OnidnhanvienChanged();
    partial void OnlatitudeChanging(System.Nullable<double> value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(System.Nullable<double> value);
    partial void OnlongitudeChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public ShipCar()
		{
			this._CTShipCars = new EntitySet<CTShipCar>(new Action<CTShipCar>(this.attach_CTShipCars), new Action<CTShipCar>(this.detach_CTShipCars));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_biensoxe", DbType="Int")]
		public System.Nullable<int> biensoxe
		{
			get
			{
				return this._biensoxe;
			}
			set
			{
				if ((this._biensoxe != value))
				{
					this.OnbiensoxeChanging(value);
					this.SendPropertyChanging();
					this._biensoxe = value;
					this.SendPropertyChanged("biensoxe");
					this.OnbiensoxeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhanvien", DbType="Int")]
		public System.Nullable<int> idnhanvien
		{
			get
			{
				return this._idnhanvien;
			}
			set
			{
				if ((this._idnhanvien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidnhanvienChanging(value);
					this.SendPropertyChanging();
					this._idnhanvien = value;
					this.SendPropertyChanged("idnhanvien");
					this.OnidnhanvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float")]
		public System.Nullable<double> latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float")]
		public System.Nullable<double> longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(100)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShipCar_CTShipCar", Storage="_CTShipCars", ThisKey="id", OtherKey="idshipcar")]
		internal EntitySet<CTShipCar> CTShipCars
		{
			get
			{
				return this._CTShipCars;
			}
			set
			{
				this._CTShipCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ShipCar", Storage="_NhanVien", ThisKey="idnhanvien", OtherKey="id", IsForeignKey=true)]
		internal NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.ShipCars.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.ShipCars.Add(this);
						this._idnhanvien = value.id;
					}
					else
					{
						this._idnhanvien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTShipCars(CTShipCar entity)
		{
			this.SendPropertyChanging();
			entity.ShipCar = this;
		}
		
		private void detach_CTShipCars(CTShipCar entity)
		{
			this.SendPropertyChanging();
			entity.ShipCar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHoaDonNhap")]
	public partial class CTHoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idhoadonnhap;
		
		private int _idsanpham;
		
		private int _soluong;
		
		private int _dongia;
		
		private string _size;
		
		private EntityRef<HoaDonNhap> _HoaDonNhap;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidhoadonnhapChanging(int value);
    partial void OnidhoadonnhapChanged();
    partial void OnidsanphamChanging(int value);
    partial void OnidsanphamChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OndongiaChanging(int value);
    partial void OndongiaChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    #endregion
		
		public CTHoaDonNhap()
		{
			this._HoaDonNhap = default(EntityRef<HoaDonNhap>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idhoadonnhap", DbType="Int NOT NULL")]
		public int idhoadonnhap
		{
			get
			{
				return this._idhoadonnhap;
			}
			set
			{
				if ((this._idhoadonnhap != value))
				{
					if (this._HoaDonNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidhoadonnhapChanging(value);
					this.SendPropertyChanging();
					this._idhoadonnhap = value;
					this.SendPropertyChanged("idhoadonnhap");
					this.OnidhoadonnhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsanpham", DbType="Int NOT NULL")]
		public int idsanpham
		{
			get
			{
				return this._idsanpham;
			}
			set
			{
				if ((this._idsanpham != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidsanphamChanging(value);
					this.SendPropertyChanging();
					this._idsanpham = value;
					this.SendPropertyChanged("idsanpham");
					this.OnidsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Int NOT NULL")]
		public int dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="VarChar(10)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonNhap_CTHoaDonNhap", Storage="_HoaDonNhap", ThisKey="idhoadonnhap", OtherKey="id", IsForeignKey=true)]
		internal HoaDonNhap HoaDonNhap
		{
			get
			{
				return this._HoaDonNhap.Entity;
			}
			set
			{
				HoaDonNhap previousValue = this._HoaDonNhap.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonNhap.Entity = null;
						previousValue.CTHoaDonNhaps.Remove(this);
					}
					this._HoaDonNhap.Entity = value;
					if ((value != null))
					{
						value.CTHoaDonNhaps.Add(this);
						this._idhoadonnhap = value.id;
					}
					else
					{
						this._idhoadonnhap = default(int);
					}
					this.SendPropertyChanged("HoaDonNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CTHoaDonNhap", Storage="_Product", ThisKey="idsanpham", OtherKey="id", IsForeignKey=true)]
		internal Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.CTHoaDonNhaps.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.CTHoaDonNhaps.Add(this);
						this._idsanpham = value.id;
					}
					else
					{
						this._idsanpham = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
